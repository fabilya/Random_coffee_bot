version: '3'

volumes:
  pg_data:
  static:

services:

  db:
    image: postgres:13.10
    env_file: .env
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

  backend:
    build: ./
    env_file: .env
    volumes:
      - static:/backend_static
    depends_on:
      db:
        condition: service_healthy
    command: >
     sh -c "python django_app.py makemigrations &&
     python django_app.py migrate &&
     python django_app.py collectstatic --noinput &&
     cp -r /app/admin_panel/collected_static/. /backend_static/static/ &&
     python django_app.py runserver 0:8000"
    restart: always

  bot:
    build: ./
    depends_on:
       - backend
    command: >
      sh -c "python bot.py"
    restart: always

  gateway:
    image: nginx:1.22.1
    volumes:
      - ./nginx.conf:/etc/nginx/templates/default.conf.template
      - static:/staticfiles/
    depends_on:
      db:
        condition: service_healthy
    ports:
      - 80:80
    restart: always

  redis:
    image: redis:alpine
    env_file:
      - .env
    restart: always
